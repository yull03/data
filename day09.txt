Day9

1. 웹 관련 개요
    Java로 개발한다 -> 클래스를 만든다.
    클래스는 객체로 구현되어야 완성된다.

    Java는 웹 개발에 사용하는 것이 기본
    누가 먼저다라는 개념은 없음

    Java로 만들어진 클래스는 웹 서버(ex 톰캣)가
    관리하는 컨테이너라는 곳에 객체화되어 대기한다.
    사용자가 요청할 때마다 객체가 출동하여 처리하고 돌아옴
    (Singleton)

    Java로 만드는 배치 프로그램?
    public static void main(String[] args)
    를 통해 직접 실행

2. 클래스 내의 변수
    - 클래스 변수
        static으로 클래스 레벨에서 정의된 변수

    - 인스턴스 변수
        * 인스턴스
            클래스와 객체와의 관계를 의미
            자동차 클래스가 있다고 가정
            트럭, 전기차, 범퍼카
            트럭은 객체이다 (O)
            트럭은 자동차의 인스턴스이다 (O)

    - 로컬 변수
        함수 내에서 선언되어 호출하면 생기고 함수가 끝나면 사라지는

3. 클래스의 메서드
    - 클래스가 가지고 있는 함수

    public static void main(String[] args)
    접근제한자
           [static]
                  리턴타입
                       메서드명
                           (매개변수들)

    1) 접근제한자
        이 메서드를 누가 실행할 수 있지?(권한)
        가장 넓은 권한은 public(누구나)

    2) static
        객체 공용이라 객체 생성 안해도 사용할 수 있다
        왜 객체 생성을 안해도 되지?
            => 객체마다 똑같거든
            => 객체마다 만들 이유가 없지 메모리 아까워
               그래서 공통영역에 하나만 만들어

    3) 리턴 타입
        메서드가 값을 받기만 하는가?? X
        일을 마치면 결과를 전송해야할 때
        ex) int add(int a, int b)
                a와 b를 더해서 돌려주는 함수
                return (a + b);
        void : 돌려주는 것 없음
        int, float, double, String, Cat, Cat[] 모두 가능

    4) 메서드명
        변수명 만드는 규칙과 동일, 일반적으로 동사 + 목적어(명사)
        printScreen, getMember, getAllVariables

    5) 매개변수
        메서드의 입력값(parameter, value, argument)
        입력값의 개수가 정해져있을 때(String str)
        입력값의 개수가 정해져있지 않을 때(String[] str)

4. this와 초기화 블럭
(1) this
    - 객체 본인을 일컫는 말
    - 예) 표에 커서를 올릴 때마다 그 줄은 빨간색
            onMouseOverEvent(this){
                this.backgroundColor = red;
            }

(2) 초기화 블럭
    2가지의 타입이 있음
    static {    }
    {           }

5. 권한
(1) 패키지
    클래스를 디렉토리별로 관리하기 위한 목적(기능별)
    * 라이브러리 : 여러 개의 패키지

(2) 접근제어
    public : 누구든지(O)
    protected : 누구든지(X), 상속받은(O), 같은디렉토리(O), 클래스내(O)
    (default) : 누구든지(X), 상속받은(X), 같은디렉토리(O), 클래스내(O)
    private : 누구든지, 상속받은, 같은디렉토리 (X), 클래스내(O)

(3) final
    변수에 final을 붙이면 수정 불가
    메서드에 final을 붙이면 상속 후 수정 불가
    클래스에 final을 붙이면 상속 불가

=> AuthEx.java    


